{"version":3,"sources":["Components/Product.jsx","Components/ProductList.jsx","Components/Feedback.jsx","Components/ImproveHeader.jsx","Components/FeedbackHeader.jsx","Components/AddHeader.jsx","Components/Loader.jsx","Components/Error.jsx","Components/AddForm.jsx","App.jsx","serviceWorker.js","index.js","utils/localstorage.js"],"names":["Product","handleUpVote","votesUsed","get","alert","set","Number","_this","props","onVote","id","react_default","a","createElement","className","src","this","productImageUrl","alt","onClick","votes","href","title","description","submitterAvatarUrl","React","Component","ProductList","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleProductUpVote","productId","nextProducts","state","products","map","product","assign","setState","url","_this2","productComponents","sort","b","Components_Product","key","view","FeedBack","tools","fiveMill","finalThoughts","loading","saved","toggleMsg","err","formUpdate","bind","assertThisInitialized","handleChangeTools","handleChangeFiveMill","templateParams","emailjs","then","response","e","target","name","value","_this3","onChange","rows","ImproveHeader","FeedbackHeader","AddHeader","override","css","_templateObject","Loader","react_spinners","sizeUnit","size","color","Error","AddForm","subtitle","user","error","added","handleChangeTitle","handleChangeSubtitle","console","log","status","text","type","Components_Loader","Error_Error","App","changeView","area","ImproveHeader_ImproveHeader","FeedbackHeader_FeedbackHeader","AddHeader_AddHeader","Components_ProductList","Feedback","Components_AddForm","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","global","__webpack_require__","d","__webpack_exports__","localStorage","getItem","removeItem","setItem"],"mappings":"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","file":"static/js/main.698c2239.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { get, set } from \"../utils/localstorage\";\r\n\r\nclass Product extends React.Component {\r\n  handleUpVote = () => {\r\n    let votesUsed = get(\"voted\");\r\n    if (votesUsed >= 3) {\r\n      alert(\"No votes remaining\");\r\n    } else {\r\n      set(\"voted\", Number(votesUsed) + 1);\r\n      this.props.onVote(this.props.id);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"item\">\r\n        <div className=\"image\">\r\n          <img src={this.props.productImageUrl} alt=\"Product\" />\r\n        </div>\r\n        <div className=\"middle aligned content\">\r\n          <div className=\"header\">\r\n            <a onClick={this.handleUpVote}>\r\n              <i id=\"icon\" className=\"large angle double up icon\" />\r\n            </a>\r\n            {this.props.votes}\r\n          </div>\r\n          <div className=\"description\">\r\n            <a href=\"#\">{this.props.title}</a>\r\n            <p>{this.props.description}</p>\r\n          </div>\r\n          <div className=\"extra\">\r\n            <span>Submitted by: </span>\r\n            <img\r\n              src={this.props.submitterAvatarUrl}\r\n              alt=\"\"\r\n              className=\"ui avatar image\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Product;\r\n","import React from \"react\";\r\nimport Product from \"./Product\";\r\n\r\nclass ProductList extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      products: [\r\n        {\r\n          id: 1,\r\n          title: \"Stop SalesForce from freezing\",\r\n          description: \"Going above four open tabs results in page lockup.\",\r\n          url: \"#\",\r\n          votes: 0,\r\n          submitterAvatarUrl: \"images/avatars/Nicole.png\",\r\n          productImageUrl: \"images/products/image-aqua.png\"\r\n        },\r\n        {\r\n          id: 2,\r\n          title: \"Regional Slack Channels\",\r\n          description: \"Improve internal communications.\",\r\n          url: \"#\",\r\n          votes: 0,\r\n          submitterAvatarUrl: \"images/avatars/Lines.png\",\r\n          productImageUrl: \"images/products/image-rose.png\"\r\n        },\r\n        {\r\n          id: 3,\r\n          title: \"New wording for Status Page\",\r\n          description: \"Provide a #human experience for our users.\",\r\n          url: \"#\",\r\n          votes: 0,\r\n          submitterAvatarUrl: \"images/avatars/Vinh.png\",\r\n          productImageUrl: \"images/products/image-steel.png\"\r\n        },\r\n        {\r\n          id: 4,\r\n          title: \"SQL querying tool\",\r\n          description: \"Avoid waiting for JIRAs.\",\r\n          url: \"#\",\r\n          votes: 0,\r\n          submitterAvatarUrl: \"images/avatars/Steve.png\",\r\n          productImageUrl: \"images/products/image-yellow.png\"\r\n        }\r\n      ]\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ products: this.state.products });\r\n  }\r\n\r\n  handleProductUpVote = productId => {\r\n    const nextProducts = this.state.products.map(product => {\r\n      if (product.id === productId) {\r\n        return Object.assign({}, product, {\r\n          votes: product.votes + 1\r\n        });\r\n      } else {\r\n        return product;\r\n      }\r\n    });\r\n\r\n    this.setState({\r\n      products: nextProducts\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const productList = this.state.products.sort((a, b) => b.votes - a.votes);\r\n\r\n    const productComponents = productList.map(product => (\r\n      <Product\r\n        key={\"product-\" + product.id}\r\n        id={product.id}\r\n        title={product.title}\r\n        description={product.description}\r\n        url={product.url}\r\n        votes={product.votes}\r\n        submitterAvatarUrl={product.submitterAvatarUrl}\r\n        productImageUrl={product.productImageUrl}\r\n        onVote={this.handleProductUpVote}\r\n      />\r\n    ));\r\n    return (\r\n      <div>\r\n        <div id=\"buttons\" className=\"ui two column centered grid\">\r\n          <div className=\"ui large buttons\">\r\n            <button\r\n              className=\"ui blue button\"\r\n              onClick={() => this.props.view(\"Feedback\")}\r\n            >\r\n              Send Feedback\r\n            </button>\r\n            <div className=\"or\" />\r\n            <button\r\n              className=\"ui blue button\"\r\n              onClick={() => this.props.view(\"Add\")}\r\n            >\r\n              Add Improvement\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"ui unstackable items\">{productComponents}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProductList;\r\n","import React from \"react\";\r\nimport * as emailjs from \"emailjs-com\";\r\n\r\nclass FeedBack extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      tools: \"no selection\",\r\n      fiveMill: \"no selection\",\r\n      finalThoughts: \"no additional feedback\",\r\n      loading: false,\r\n      saved: false,\r\n      toggleMsg: true,\r\n      err: false\r\n    };\r\n    this.formUpdate = this.formUpdate.bind(this);\r\n    this.handleChangeTools = this.handleChangeTools.bind(this);\r\n    this.handleChangeFiveMill = this.handleChangeFiveMill.bind(this);\r\n    this.finalThoughts = this.finalThoughts.bind(this);\r\n    this.toggleMsg = this.toggleMsg.bind(this);\r\n  }\r\n\r\n  formUpdate() {\r\n    let templateParams = this.state;\r\n    this.setState({\r\n      loading: true\r\n    });\r\n    emailjs\r\n      .send(\"gmail\", \"tech\", templateParams, \"user_RxhvyGQEKc5Qg6UrvouN6\")\r\n      .then(\r\n        response => {\r\n          this.setState({\r\n            loading: false,\r\n            saved: true,\r\n            toggleMsg: true,\r\n            err: false\r\n          });\r\n        },\r\n        err => {\r\n          this.setState({\r\n            loading: false,\r\n            err: true,\r\n            toggleMsg: true\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  toggleMsg() {\r\n    this.setState({\r\n      toggleMsg: !this.state.toggleMsg\r\n    });\r\n  }\r\n\r\n  handleChangeTools(e) {\r\n    this.setState({\r\n      tools: e.target.name\r\n    });\r\n  }\r\n\r\n  handleChangeFiveMill(e) {\r\n    this.setState({\r\n      fiveMill: e.target.value\r\n    });\r\n  }\r\n\r\n  finalThoughts(e) {\r\n    this.setState({\r\n      finalThoughts: e.target.value\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"feedForm\" className=\"item\">\r\n        <div>\r\n          <p>Do you have the rights tools to provide world class support?</p>\r\n          {this.state.tools !== \"Yes\" && (\r\n            <button\r\n              className=\" ui toggle button\"\r\n              onClick={this.handleChangeTools}\r\n              name=\"Yes\"\r\n            >\r\n              Yes\r\n            </button>\r\n          )}\r\n          {this.state.tools === \"Yes\" && (\r\n            <button\r\n              className=\"positive ui toggle button\"\r\n              onClick={this.handleChangeTools}\r\n              name=\"Yes\"\r\n            >\r\n              Yes\r\n            </button>\r\n          )}\r\n          {this.state.tools !== \"No\" && (\r\n            <button\r\n              className=\"ui toggle button\"\r\n              onClick={this.handleChangeTools}\r\n              name=\"No\"\r\n            >\r\n              No\r\n            </button>\r\n          )}\r\n          {this.state.tools === \"No\" && (\r\n            <button\r\n              className=\"negative ui toggle button\"\r\n              onClick={this.handleChangeTools}\r\n              name=\"No\"\r\n            >\r\n              No\r\n            </button>\r\n          )}\r\n        </div>\r\n        <p id=\"question\">\r\n          What things do you think we'll need, in order to service five million\r\n          users?\r\n        </p>\r\n        <div className=\"field\">\r\n          <textarea\r\n            id=\"textArea\"\r\n            onChange={this.handleChangeFiveMill}\r\n            rows=\"3\"\r\n          />\r\n        </div>\r\n\r\n        <p id=\"question\">Any Other Thoughts or Feedback?</p>\r\n        <div className=\"field\">\r\n          <textarea id=\"textArea\" onChange={this.finalThoughts} rows=\"3\" />\r\n        </div>\r\n        {!this.state.loading && (\r\n          <div className=\"positive ui submit button\" onClick={this.formUpdate}>\r\n            Submit\r\n          </div>\r\n        )}\r\n        {this.state.loading && (\r\n          <div className=\"ui positive loading button\">Loading</div>\r\n        )}\r\n        <div\r\n          className=\"ui submit button\"\r\n          onClick={() => this.props.view(\"Product\")}\r\n        >\r\n          Back\r\n        </div>\r\n        {this.state.saved && this.state.toggleMsg && (\r\n          <div className=\"ui success message\">\r\n            <i onClick={this.toggleMsg} className=\"close icon\" />\r\n            <div className=\"header\">Your feedback sent successfully.</div>\r\n            <p>Thanks for doing this, you're a star!</p>\r\n          </div>\r\n        )}\r\n        {this.state.err && this.state.toggleMsg && (\r\n          <div className=\"ui negative message\">\r\n            <i onClick={this.toggleMsg} className=\"close icon\" />\r\n            <div className=\"header\">There was an error.</div>\r\n            <p>Please try again. If it persists, let a Team Leader know.</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FeedBack;\r\n","import React from \"react\";\r\n\r\nexport const ImproveHeader = () => {\r\n  return <h1 className=\"ui dividing centered header\">Popular Improvements</h1>;\r\n};\r\n\r\nexport default ImproveHeader;\r\n","import React from \"react\";\r\n\r\nexport const FeedbackHeader = () => {\r\n  return <h1 className=\"ui dividing centered header\">Submit Feedback</h1>;\r\n};\r\n\r\nexport default FeedbackHeader;\r\n","import React from \"react\";\r\n\r\nexport const AddHeader = () => {\r\n  return <h1 className=\"ui dividing centered header\">Submit Improvement</h1>;\r\n};\r\n\r\nexport default AddHeader;\r\n","import React from \"react\";\r\nimport { css } from \"react-emotion\";\r\nimport { BeatLoader } from \"react-spinners\";\r\n\r\nconst override = css`\r\n  display: block;\r\n  margin: 0 auto;\r\n  border-color: red;\r\n`;\r\n\r\nclass Loader extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: true\r\n    };\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"sweet-loading\">\r\n        <BeatLoader\r\n          className={override}\r\n          sizeUnit={\"px\"}\r\n          size={10}\r\n          color={\"#123abc\"}\r\n          loading={this.state.loading}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Loader;\r\n","import React from \"react\";\r\n\r\nexport const Error = () => {\r\n  return (\r\n    <h4 className=\"ui dividing centered header\">Sorry there was an error.</h4>\r\n  );\r\n};\r\n\r\nexport default Error;\r\n","import React from \"react\";\r\nimport * as emailjs from \"emailjs-com\";\r\nimport Loader from \"./Loader\";\r\nimport { Error } from \"./Error\";\r\n\r\nclass AddForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      title: \"No title added\",\r\n      subtitle: \"No subtitle\",\r\n      user: \"anonymous\",\r\n      loading: false,\r\n      error: false,\r\n      added: false\r\n    };\r\n    this.formUpdate = this.formUpdate.bind(this);\r\n    this.handleChangeTitle = this.handleChangeTitle.bind(this);\r\n    this.handleChangeSubtitle = this.handleChangeSubtitle.bind(this);\r\n    this.finalThoughts = this.finalThoughts.bind(this);\r\n  }\r\n\r\n  formUpdate() {\r\n    let templateParams = this.state;\r\n    this.setState({\r\n      loading: true\r\n    });\r\n    emailjs\r\n      .send(\"gmail\", \"add\", templateParams, \"user_RxhvyGQEKc5Qg6UrvouN6\")\r\n      .then(\r\n        response => {\r\n          this.setState({\r\n            loading: false,\r\n            error: false,\r\n            added: true\r\n          });\r\n          console.log(\"SUCCESS!\", response.status, response.text);\r\n          //set state to show email success\r\n        },\r\n        err => {\r\n          this.setState({\r\n            loading: false,\r\n            error: true\r\n          });\r\n          //set state to show email fail\r\n          console.log(\"FAILED...\", err);\r\n        }\r\n      );\r\n  }\r\n\r\n  handleChangeTitle(e) {\r\n    this.setState({\r\n      title: e.target.name\r\n    });\r\n  }\r\n\r\n  handleChangeSubtitle(e) {\r\n    this.setState({\r\n      subtitle: e.target.value\r\n    });\r\n  }\r\n\r\n  finalThoughts(e) {\r\n    this.setState({\r\n      user: e.target.value\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div id=\"feedForm\" className=\"item\">\r\n          <p>Please enter a title for your Improvement</p>\r\n          <input id=\"textArea\" onChange={this.handleChangeTitle} type=\"text\" />\r\n          <p id=\"addPara\">\r\n            Please enter a subtitle to help others understand this Improvement\r\n          </p>\r\n          <div className=\"field\">\r\n            <textarea\r\n              id=\"textArea\"\r\n              onChange={this.handleChangeSubtitle}\r\n              rows=\"2\"\r\n            />\r\n          </div>\r\n\r\n          <p>Known or anonymous?</p>\r\n          <div className=\"field\">\r\n            <textarea id=\"textArea\" onChange={this.finalThoughts} rows=\"3\" />\r\n          </div>\r\n          {!this.state.loading && !this.state.added && (\r\n            <div\r\n              className=\"ui submit button\"\r\n              name=\"knowledge\"\r\n              onClick={this.formUpdate}\r\n            >\r\n              Add Improvement\r\n            </div>\r\n          )}\r\n          {this.state.loading && <Loader />}\r\n          <div\r\n            className=\"ui submit button\"\r\n            name=\"knowledge\"\r\n            onClick={() => this.props.view(\"Product\")}\r\n          >\r\n            Back\r\n          </div>\r\n          {this.state.error && <Error />}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddForm;\r\n","import React from \"react\";\r\nimport ProductList from \"./Components/ProductList\";\r\nimport Feedback from \"./Components/Feedback\";\r\nimport { ImproveHeader } from \"./Components/ImproveHeader\";\r\nimport { FeedbackHeader } from \"./Components/FeedbackHeader\";\r\nimport { AddHeader } from \"./Components/AddHeader\";\r\nimport AddForm from \"./Components/AddForm\";\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      view: \"Product\"\r\n    };\r\n    this.changeView = this.changeView.bind(this);\r\n  }\r\n\r\n  changeView(area) {\r\n    this.setState({\r\n      view: area\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.view === \"Product\" && <ImproveHeader />}\r\n        {this.state.view === \"Feedback\" && <FeedbackHeader />}\r\n        {this.state.view === \"Add\" && <AddHeader />}\r\n        {this.state.view === \"Product\" && (\r\n          <ProductList view={this.changeView} />\r\n        )}\r\n        {this.state.view === \"Feedback\" && <Feedback view={this.changeView} />}\r\n        {this.state.view === \"Add\" && <AddForm view={this.changeView} />}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\nserviceWorker.unregister();\r\n","const localStorage = global.window.localStorage;\r\n\r\nexport function get(key) {\r\n  return localStorage.getItem(key);\r\n}\r\n\r\nexport function set(key, value) {\r\n  if (value === null) {\r\n    localStorage.removeItem(key);\r\n  } else {\r\n    localStorage.setItem(key, value);\r\n  }\r\n}\r\n\r\nexport function remove(key) {\r\n  localStorage.removeItem(key);\r\n}\r\n"],"sourceRoot":""}